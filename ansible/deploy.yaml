- name: Create Env
  hosts: localhost
  gather_facts: false

  vars:
    appname: test123
    instances: []
    state: create

  tasks:
#### CHECK SG STUFF ISNT DUPLICATING

    - name: Get my public IP
      ipify_facts:
      delegate_to: localhost

    - set_fact:
        myip: "{{ ansible_facts.ipify_public_ip + '/32'}}"

    - ec2_instance_info:
        filters:
          "tag:Name":  Forrest-Ansible-Ubuntu
          "tag:demo_app":  demo_app
          "instance-state-name": ["running"]
      register: checkRunning

    - set_fact:
        instances: "{{ instances + [checkRunning.instances.0.instance_id] }}"
      when: checkRunning.instances | length > 0

    - debug:
        var: instances

    - name: Active LTM Commands
      block:

      - name: ansible sg
        ec2_group:
          name: forrest_ansible_sg
          description: forrest_ansible_sg
          vpc_id: vpc-0c1fd9c208308f0c9
          region: us-east-2
          rules:
            - proto: tcp
              ports:
                - 8080
                - 80
                - 443
                - 8443
                - 3000
                - 8081
                - 27017
              cidr_ip: "{{ myip }}"
            - proto: all
              group_name: forrest_ansible_sg
        delegate_to: localhost  
    
    
      - ec2:
          key_name: 4est2
          region: us-east-2
          group: 4est-bip
          instance_type: t2.medium
          image: ami-0bbe28eb2173f6167
          wait: yes
          instance_tags:
            Name: Forrest-Ansible-Ubuntu
            demo_app: demo_app
          volumes:
            - device_name: /dev/sda1
              # snapshot: snap-abcdef12
              volume_type: gp2
              volume_size: 30
              delete_on_termination: true
          vpc_subnet_id: subnet-0ec6b63e44ba17aad
          assign_public_ip: yes
    
      when: checkRunning.instances.0.instance_id is not defined
    




### TEARDOWN

    - name: Terminate instances that were previously launched
      ec2:
        region: us-east-2
        state: "{{ state }}"
        instance_ids: "{{ instances }}"
      when: state == "absent"