- name: Deploy Bacon App
  hosts: bacon
  gather_facts: false

  vars_files:
    - vars.yaml

  tasks:


    - name: Wait for VMs to be online
      ansible.builtin.wait_for:
        port: 22
        delay: 5
        timeout: 300

    - name: Install a list of packages
      apt:
        pkg:
        - docker.io
        - python3-pip
        - docker-compose
        - stress-ng  
        update_cache: yes
      become: yes

    - pip:
        name: docker
        executable: pip3
      become: true

    - pip:
        name: docker-compose
        executable: pip3
      become: true

    - name: Copy App Files Over
      synchronize:
        src: ../../bacon_app
        dest: /home/ubuntu/
        rsync_opts:
          - "--exclude=node_modules"
          - "--exclude=.venv"
      become: yes


    - name: Copy NGNINX certs
      synchronize:
        src: ../../../certs
        dest: /home/ubuntu/bacon_app/nginx-plus-nap/
        rsync_opts:
          - "--exclude=node_modules"
          - "--exclude=.venv"
      ignore_errors: yes # In case rebuilding is not needed, check for certs existing in future.
      become: yes

    #Docker-Compose Build/Start
    - name: Create and start services
      community.general.docker_compose:
        project_src: /home/ubuntu/bacon_app
        # project_name: "{{ inventory_hostname }}"
        build: yes
      register: output
      become: true


    # INSTALL and SETUP TELEGRAF
    - name: Import InfluxData GPG signing key [Debian/Ubuntu]
      apt_key:
        url: "https://repos.influxdata.com/influxdb.key"
        state: present
      become: yes

    - name: Add InfluxData repository [Debian/Ubuntu]
      apt_repository:
        repo: "deb https://repos.influxdata.com/ubuntu bionic stable"
        state: present
      become: yes

    - name: Install Telegraf packages [Debian/Ubuntu]
      apt:
        name: telegraf
        state: latest
        update_cache: yes
      register: apt_result
      become: yes

    - name: Enable TG to poll docker
      shell: usermod -aG docker telegraf
      become: yes

    - name: Set templatized Telegraf configuration
      template:
        src: ./templates/tgbase.conf
        dest: /etc/telegraf/telegraf.conf
        force: yes
      become: yes

    - name: Set templatized Telegraf configuration
      template:
        src: "{{ item }}"
        dest: "/etc/telegraf/telegraf.d/{{ item.split('/')[-1] }}"
        force: yes
      become: yes   
      loop: "{{ lookup('fileglob', 'templates/tg_plugins/*', wantlist=True) }}"
      when: item is not search("beacon.conf") #prevent removal of ingest token on app updates

    - name: restart telegraf
      service:
        name: telegraf
        state: restarted
      become: yes
    