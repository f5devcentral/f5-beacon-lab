- name: Configure Beacon
  hosts: control
  gather_facts: false
  connection: local

  vars:
    csAPI: "https://api.cloudservices.f5.com"
    ingestAPI: "https://ingestion.ovr.prd.f5aas.com:50443"

  tasks:

    - set_fact:
        beacon_un: "{{ lookup('env', 'BEACON_UN') }}"
        beacon_pw: "{{ lookup('env', 'BEACON_PW') }}"
        beacon_acct: "{{ lookup('env', 'BEACON_ACCT') }}"

    - name: Get UDF metadata
      uri:
        url: "http://metadata.udf/deployment"
        method: GET
      register: udfenv
      delegate_to: localhost

    - set_fact:
        http_monitors:
          - name: "Bacon East"
            url: "https://{{udfenv.json | json_query(\"deployment.components[?name=='BIG-IP'].accessMethods.https[] | [?label=='East URL Frontend'].host\") | first}}"
          - name: "Bacon West"
            url: "https://{{udfenv.json | json_query(\"deployment.components[?name=='West'].accessMethods.https[] | [?label=='West URL Frontend'].host\") | first}}"
        dns_monitors:
          - name: "Bacon East DNS"
            domain: "{{udfenv.json | json_query(\"deployment.components[?name=='BIG-IP'].accessMethods.https[] | [?label=='East URL Frontend'].host\") | first}}"
          - name: "Bacon West DNS"
            domain: "{{udfenv.json | json_query(\"deployment.components[?name=='West'].accessMethods.https[] | [?label=='West URL Frontend'].host\") | first}}"


    - name: Get Beacon Auth
      uri:
        url: "{{csAPI}}/v1/svc-auth/login"
        method: POST
        body_format: json
        body:
          username: "{{ beacon_un }}"
          password: "{{ beacon_pw }}"
      register: authtoken
      delegate_to: localhost

    - name: Create Ingest Token
      uri:
        url: "{{csAPI}}/beacon/v1/telemetry-token"
        method: POST
        body_format: json
        headers:
          Content-Type: application/json
          Authorization: "Bearer {{ authtoken.json.access_token }}"
          X-F5aas-Preferred-Account-Id: "{{ beacon_acct }}"
        body:
          name: bacon_token
          description: Demo-lab token for Bacon App
      register: createdToken
      delegate_to: localhost

    - set_fact:
        beacon_token: "{{ createdToken.json.accessToken }}"

    - name: Create Insights
      uri:
        url: "{{csAPI}}/beacon/v1/insights"
        method: POST
        body_format: json
        headers:
          Content-Type: application/json
          Authorization: "Bearer {{ authtoken.json.access_token }}"
          X-F5aas-Preferred-Account-Id: "{{ beacon_acct }}"
        body: "{{ lookup('file', item) }}"
      register: createdToken
      delegate_to: localhost
      loop: "{{ lookup('fileglob', 'beacon/insights/*', wantlist=True) }}"

    # Does not currently validate app was created through ASYNC
    - name: Create Apps
      uri:
        url: "{{csAPI}}/beacon/v1/declare"
        method: POST
        body_format: json
        headers:
          Content-Type: application/json
          Authorization: "Bearer {{ authtoken.json.access_token }}"
          X-F5aas-Preferred-Account-Id: "{{ beacon_acct }}"
        body: "{{ lookup('file', item) }}"
        status_code: 202
      register: createdToken
      delegate_to: localhost
      loop: "{{ lookup('fileglob', 'beacon/apps/*', wantlist=True) }}"

    # Does not currently validate app was created through ASYNC
    - name: Create HTTP Monitors
      uri:
        url: "{{csAPI}}/beacon/v1/declare"
        method: POST
        body_format: json
        headers:
          Content-Type: application/json
          Authorization: "Bearer {{ authtoken.json.access_token }}"
          X-F5aas-Preferred-Account-Id: "{{ beacon_acct }}"
        body: "{{ lookup('template', './beacon/monitors/http_monitor.j2') }}"
        status_code: 202
      register: createdMonitors
      delegate_to: localhost
      loop: "{{ http_monitors }}"

    # Does not currently validate app was created through ASYNC
    - name: Create DNS Monitors
      uri:
        url: "{{csAPI}}/beacon/v1/declare"
        method: POST
        body_format: json
        headers:
          Content-Type: application/json
          Authorization: "Bearer {{ authtoken.json.access_token }}"
          X-F5aas-Preferred-Account-Id: "{{ beacon_acct }}"
        body: "{{ lookup('template', './beacon/monitors/dns_monitor.j2') }}"
        status_code: 202
      register: createdDNSMonitors
      delegate_to: localhost
      loop: "{{ dns_monitors }}"


- name: Update Telegraf on App Servers
  hosts: bacon
  gather_facts: false
  
  vars:
    beacon_token: "{{ hostvars.localhost.beacon_token }}"

  tasks:

    - name: Set templatized Telegraf configuration
      template:
        src: "{{ item }}"
        dest: "/etc/telegraf/telegraf.d/{{ item.split('/')[-1] }}"
        force: yes
      become: yes   
      loop: "{{ lookup('fileglob', 'templates/tg_plugins/beacon.conf', wantlist=True) }}"

    - name: restart telegraf
      service:
        name: telegraf
        state: restarted
      become: yes

- name: Update TS Token
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    provider: "{{ hostvars.bigip_east.provider }}"
    beacon_token: "{{ hostvars.localhost.beacon_token }}"

  tasks:

    - name: Wait for BIG-IP
      bigip_wait:
        timeout: 600
        provider: "{{ provider }}"
      delegate_to: localhost

    - name: TS Update
      include_role:
        name: f5devcentral.atc_deploy
      vars:
        atc_method: POST
        atc_service: Telemetry
        atc_declaration: "{{ lookup('template', 'bigip/ts.json') }}"